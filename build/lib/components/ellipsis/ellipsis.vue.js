"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue"),c=require("../icon/icon.vue.js"),f=Object.assign({name:"GovEllipsis"},{__name:"ellipsis",props:{maxLines:{type:[Number,String],default:1},fold:{type:Boolean,default:!1},foldHeight:{type:[Number,String],default:100},hideFoldup:Boolean},emits:["toggle"],setup(t,{emit:i}){const o=t,a=e.ref(null),l=e.ref(!1),n=e.computed(()=>l.value?{}:o.fold?{maxHeight:`${parseFloat(o.foldHeight)}px`}:{display:"-webkit-box","-webkit-box-orient":"vertical","-webkit-line-clamp":o.maxLines}),s=()=>{o.fold||(l.value=!l.value)},r=i,d=()=>{l.value=!l.value,r("toggle",l.value)};return(u,m)=>(e.openBlock(),e.createElementBlock("div",{class:e.normalizeClass(["gov-ellipsis",[t.fold?"is-fold":"is-overflow",{"is-expanded":l.value,"has-foldup":!t.hideFoldup}]])},[e.createElementVNode("div",{ref_key:"textRef",ref:a,class:"gov-ellipsis__content",style:e.normalizeStyle(n.value),onClick:s},[e.renderSlot(u.$slots,"default")],4),t.fold&&(!t.hideFoldup||!l.value)?(e.openBlock(),e.createElementBlock("div",{key:0,class:"gov-ellipsis__toggle",onClick:e.withModifiers(d,["stop"])},[e.createElementVNode("span",null,[e.createVNode(c.default,{name:"arrow-down"})])])):e.createCommentVNode("",!0)],2))}});exports.default=f;
